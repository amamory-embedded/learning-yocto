# We have a conf and classes directory, add to BBPATH
BBPATH .= ":${LAYERDIR}"

# We have recipes-* directories, add to BBFILES
BBFILES += "${LAYERDIR}/recipes-*/*/*.bb \
            ${LAYERDIR}/recipes-*/*/*.bbappend"

BBFILE_COLLECTIONS += "meta-learning"
BBFILE_PATTERN_meta-learning = "^${LAYERDIR}/"
BBFILE_PRIORITY_meta-learning = "6"

LAYERDEPENDS_meta-learning = "core"
LAYERSERIES_COMPAT_meta-learning = "dunfell"

# add here the name of the recipes to be included into the image
IMAGE_INSTALL_append = " example"
IMAGE_INSTALL_append = " hello"
#IMAGE_INSTALL_append = " hellomake"
IMAGE_INSTALL_append = " hellocmake"
IMAGE_INSTALL_append = " libhello"
IMAGE_INSTALL_append = " hellodep"
IMAGE_INSTALL_append = " hellogit"
IMAGE_INSTALL_append = " hellogitcmake"

###########################
# enable serial console
###########################
ENABLE_UART = "1"

# check the following files to check whether the modifications were applied
# $ cat /mnt/yocto/tmp/deploy/images/raspberrypi3/bootfiles/config.txt | grep serial
# $ cat /mnt/yocto/tmp/deploy/images/raspberrypi3/bootfiles/cmdline.txt 

###########################
# wifi setup
###########################
# run bitbake -e core-image-minimal | grep "^DISTRO_FEATURES"
# run bitbake -e core-image-minimal | grep "^MACHINE_FEATURES"
# $ bitbake -e core-image-minimal | grep "^COMBINED_FEATURES"
#   COMBINED_FEATURES="vfat bluetooth ext2 usbhost wifi alsa"
# to learn about the supported features
# https://www.yoctoproject.org/docs/2.1/mega-manual/mega-manual.html#var-DISTRO_FEATURES
# learn more : 
#   - https://embeddedguruji.blogspot.com/2019/04/machinefeatures-vs-distrofeatures-in.html
#   - https://docs.yoctoproject.org/3.2.3/ref-manual/ref-features.html
DISTRO_FEATURES_append += " wifi"
IMAGE_INSTALL_append += " i2c-tools \
        bridge-utils \
        hostapd \
        dhcp-client \
        iw \        
        dhcp-server \
        iptables \
        wpa-supplicant"

        # errorneous :
        # linux-firmware-brcm43430 \
        # python-smbus \


###########################
# VNC
###########################
# VNC has lots of depedency. It's heavy. Be sure you need it.
IMAGE_INSTALL_append += " x11vnc"

###########################
# EXTRA_IMAGE_FEATURES 
###########################
# https://docs.yoctoproject.org/3.2.3/ref-manual/ref-features.html#image-features
# some of the most relevant features are:
# - debug-tweaks: Makes an image suitable for development (e.g. allows root logins without passwords and enables post-installation logging). See the ‘allow-empty-password’, ‘empty-root-password’, and ‘post-install-logging’ features in this list for additional information.
# - dev-pkgs: Installs development packages (headers and extra library links) for all packages installed in a given image.
# - package-management: Installs package management tools and preserves the package manager database.
# - tools-sdk: Installs a full SDK that runs on the device.
# - perf: Installs profiling tools such as perf, systemtap, and LTTng. For general information on user-space tools, see the Yocto Project Application Development and the Extensible Software Development Kit (eSDK) manual.
# - ssh-server-dropbear: Installs the Dropbear minimal SSH server.
# - ssh-server-openssh: Installs the OpenSSH SSH server, which is more full-featured than Dropbear. Note that if both the OpenSSH SSH server and the Dropbear minimal SSH server are present in IMAGE_FEATURES, then OpenSSH will take precedence and Dropbear will not be installed.

EXTRA_IMAGE_FEATURES ?= "debug-tweaks ssh-server-openssh"
